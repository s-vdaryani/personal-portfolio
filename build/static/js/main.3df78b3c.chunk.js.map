{"version":3,"sources":["logo.svg","InputBar.js","Modal.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","InputBar","inputValue","setInputValue","useState","React","createElement","className","type","value","onChange","event","target","placeholder","onClick","handleButtonClick","Modal","_ref","isModalOpen","toggleModal","currentImageIndex","setCurrentImageIndex","imageUrls","windowHeight","style","maxHeight","concat","src","alt","handleLeftClick","prevIndex","length","handleRightClick","Title","Navbar","onProfileClick","QuickLinks","handleNavigation","url","window","open","rel","handleEmailClick","href","App","backgroundImage","setBackgroundImage","setIsModalOpen","setWindowHeight","innerHeight","useEffect","backgrounds","selectedBackground","Math","floor","random","handleResize","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3df78b3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { useState } from 'react';\n\nfunction InputBar() {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleButtonClick = () => {\n    setInputValue(''); // Clear the input field\n    // Future functionality: Store the response\n  };\n\n  return (\n    <div className=\"input-container\">\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder=\"How are you?\"\n        className=\"text-input\"\n      />\n      <button onClick={handleButtonClick} className=\"enter-button\">Enter</button>\n    </div>\n  );\n}\n\nexport default InputBar;\n","import React from 'react';\n\nfunction Modal({ isModalOpen, toggleModal, currentImageIndex, setCurrentImageIndex, imageUrls, windowHeight }) {\n    const handleLeftClick = () => {\n        setCurrentImageIndex(prevIndex => (prevIndex > 0 ? prevIndex - 1 : imageUrls.length - 1));\n    };\n\n    const handleRightClick = () => {\n        setCurrentImageIndex(prevIndex => (prevIndex < imageUrls.length - 1 ? prevIndex + 1 : 0));\n    };\n\n    return (\n        isModalOpen && (\n            <div className=\"modal\" style={{ maxHeight: `${windowHeight - 15}px` }}>\n                <button className=\"x-button\" onClick={toggleModal}>X</button>\n                <img className='profile-images' src={imageUrls[currentImageIndex]} alt={`Image ${currentImageIndex + 1}`} />\n                <div className='switch-buttons'>\n                    <button className=\"left-button\" onClick={handleLeftClick}>\n                        <img src=\"/images/left.png\" alt=\"Left\" />\n                    </button>\n                    <button className=\"right-button\" onClick={handleRightClick}>\n                        <img src=\"/images/right.png\" alt=\"Right\" />\n                    </button>\n                </div>\n                <p>Hi, my name is Vani Daryani. This is my portfolio website; thank you for visiting! \n                I am a sophomore in Computer Science at Purdue University. I made this website using a \n                MERN stack (MongoDB, Express.js, React, and Node.js). This marks my debut in single-handedly \n                deploying a web product and my second time doing full-stack development. I plan to update \n                this site as I learn new skills and showcase my future projects here! I have added links to \n                my Instagram and LinkedIn and my email if you want to get in touch. In addition, I have \n                created a photo album to show photos I take with my digital camera throughout college.</p>\n                <button className=\"close-button\" onClick={toggleModal}>Close</button>\n            </div>\n        )\n    );\n}\n\nexport default Modal;\n","import logo from './logo.svg';\nimport './App.css';\nimport InputBar from './InputBar';\nimport Modal from './Modal';\nimport React, { useEffect, useState } from 'react';\n\nfunction Title() {\n  return (\n    <div className=\"Title\">\n      <img src=\"/images/Title.png\" alt=\"Title\" />\n    </div>\n  );\n}\n\nfunction Navbar({onProfileClick}) {\n  return (\n    <div className=\"navbar\">\n      {/* Other navbar content here */}\n      <button className=\"profile-button\" onClick={onProfileClick}>\n        <img src=\"/images/profile.png\" alt=\"Profile\" />\n      </button>\n      <button className=\"file-button\">\n        <img src=\"/images/fileDropdown.png\" alt=\"Files & Projects\" />\n      </button>\n\n    </div>\n  );\n}\n\nfunction QuickLinks() {\n  // Mailto\n  const email = \"vani.daryani@outlook.com\";\n\n  const handleEmailClick = () => {\n    window.open(`mailto:${email}`, \"_blank\");\n  }\n\n  const handleNavigation = (url) => {\n    window.open(url, \"_blank\");\n  };\n\n  return (\n    <div className=\"QuickLinks\">\n      <button onClick={() => handleNavigation(\"https://www.linkedin.com/in/vani-daryani/\")} target= \"_blank\" rel='noopener noreferrer'>\n        <img src=\"/images/linkedinButton.PNG\" alt=\"LinkedIn\" />\n      </button>\n      <button onClick={() => handleNavigation(\"https://www.instagram.com/vani.daryani/\")} target= \"_blank\" rel='noopener noreferrer'>\n        <img src=\"/images/instagramButton.PNG\" alt=\"Instagram\" />\n      </button>\n      <button onClick={handleEmailClick}>\n        <img src=\"/images/mailButton.png\" alt=\"Email\" />\n      </button>\n      {/* Turn into button later */}\n      <a href=\"https://www.example4.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"/images/photoButton.png\" alt=\"Gallery\" />\n      </a>\n    </div>\n  );\n}\n\n\nfunction App() {\n  //Background variables\n  const [backgroundImage, setBackgroundImage] = useState('');\n  //Profile pop-up states\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // Pop-up height constants\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  // Image constants\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  //Random Background Selection\n  useEffect(() => {\n    // Array of background images\n    const backgrounds = ['/images/bluebackground.gif', '/images/pinkbackground.gif'];\n    // Randomly select one of the backgrounds\n    const selectedBackground = backgrounds[Math.floor(Math.random() * backgrounds.length)];\n    setBackgroundImage(selectedBackground);\n  }, []);\n\n  //Set pop-up states (open close)\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  }\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Define an array of image URLs for your carousel\n  const imageUrls = [\n    '/images//profiles/photo1.jpg',\n    '/images/profiles/photo2.jpg',\n    '/images/profiles/photo3.jpg',\n    '/images/profiles/photo4.jpg'\n    // Add more image URLs as needed\n  ];\n\n\n\n  // Function to handle clicking the left button\n  const handleLeftClick = () => {\n    setCurrentImageIndex((prevIndex) => {\n      // Ensure the index stays within bounds\n      return prevIndex > 0 ? prevIndex - 1 : imageUrls.length - 1;\n    });\n  };\n\n  // Function to handle clicking the right button\n  const handleRightClick = () => {\n    setCurrentImageIndex((prevIndex) => {\n      // Ensure the index stays within bounds\n      return prevIndex < imageUrls.length - 1 ? prevIndex + 1 : 0;\n    });\n  };\n\n  return (\n    <div className=\"App\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n      <Navbar onProfileClick={toggleModal} />\n      <div className=\"home-contents\">\n        <Title />\n        <InputBar />\n        <QuickLinks />\n      </div>\n\n      <Modal\n        isModalOpen={isModalOpen}\n        toggleModal={toggleModal}\n        currentImageIndex={currentImageIndex}\n        setCurrentImageIndex={setCurrentImageIndex}\n        imageUrls={imageUrls}\n        windowHeight={windowHeight}\n      />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}